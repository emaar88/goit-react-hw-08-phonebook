{"version":3,"sources":["redux/contacts/actions/contactActions.js","redux/auth/authReducer.js","redux/auth/authActions.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Layout.js","routes.js","components/App.js","redux/contacts/reducers/contactReducers.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","onRename","initialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","connect","state","isAuthenticated","authSelectors","Component","component","routeProps","render","props","to","restricted","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","exact","style","activeStyle","container","alignItems","avatar","marginRight","getUserName","getUserEmail","onLogout","authOperations","logOut","src","alt","width","Button","type","onClick","AuthNav","header","justifyContent","borderBottom","marginLeft","Layout","children","path","label","lazy","private","App","this","onGetCurrentUser","fallback","routes","map","route","key","getCurrentUser","items","contactsActions","action","filter","contact","id","loading","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","post","then","response","data","catch","logIn","responce","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.6702d563.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/removeRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst deleteContactError = createAction(\"contacts/removeError\");\r\n\r\nconst onRename = createAction(\"contacts/onRename\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  onRename,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n// import withAuth from \"./hoc/withAuth\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n// export default withAuth(PrivateRoute);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import withAuth from \"./hoc/withAuth\";\r\n// import withRouter from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated, // проверка на ограниченный Роут\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n// export default withRouter(withAuth(PublicRoute));\r\n\r\n// export default withAuth(PublicRoute);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import routes from \"../routes\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n// import \"./Navigation.scss\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/tasks\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Tasks\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../redux/auth\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, email, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {email}</span>\r\n    <Button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  email: authSelectors.getUserEmail(state),\r\n  avatar:\r\n    \"https://avatars3.githubusercontent.com/u/54318155?s=460&u=a7afe8757ccb766548376349fc1a483ff883dd21&v=4\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu\r\n);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import routes from \"../routes\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n// import \"./Navigation.scss\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Авторизация\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { authSelectors } from \"../redux/auth\";\r\nimport AuthNav from \"./AuthNav\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #2A363B\",\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport AppBar from \"./AppBar\";\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"80vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"0 24px\",\r\n  },\r\n};\r\n\r\nconst Layout = ({ children }) => (\r\n  <div style={styles.container}>\r\n    <AppBar />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n","import { lazy } from \"react\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    label: \"Домашняя\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./views/HomeView\" /* webpackChunkName: \"homeview\" */)\r\n    ),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Регистрация\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./views/RegisterView\" /* webpackChunkName: \"registerview\" */)\r\n    ),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Логинизация\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./views/LoginView\" /* webpackChunkName: \"loginview\" */)\r\n    ),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Домашка\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./views/ContacterView\" /* webpackChunkName: \"contacterview\" */)\r\n    ),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React, { Component, Suspense } from \"react\";\n// import { uuid } from \"uuidv4\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport Layout from \"./Layout\";\nimport routes from \"../routes\";\nimport { authOperations } from \"../redux/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Suspense fallback={<h1>Loading...</h1>}>\n            <Switch>\n              {routes.map((route) =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                )\n              )}\n            </Switch>\n          </Suspense>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"../actions/contactActions\";\r\n\r\nconst addContact = (state, action) => [...state, action.payload];\r\nconst deleteContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.deleteContactSuccess]: deleteContact,\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.onRename]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.deleteContactRequest]: () => true,\r\n  [contactsActions.deleteContactSuccess]: () => false,\r\n  [contactsActions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts/reducers/contactReducers\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { store, persistor } from \"./redux/store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`; //.common - означает для всех типов запросов не только при post или get\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token); // обязательно для регистрации\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((responce) => {\r\n      token.set(responce.data.token); // обязательно для регистрации\r\n      dispatch(authActions.loginSuccess(responce.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((error) => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset(); // обязательно при разлогине\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch((error) => authActions.logoutError(error));\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const isAuthenticated = (state) => state.auth.token;\r\nconst getUserName = (state) => state.auth.user.name;\r\nconst getUserEmail = (state) => state.auth.user.email;\r\n\r\nexport default { isAuthenticated, getUserName, getUserEmail };\r\n"],"sourceRoot":""}