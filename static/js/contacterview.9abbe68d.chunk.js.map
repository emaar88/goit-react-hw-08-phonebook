{"version":3,"sources":["components/contacts/ContactForm/ContactForm.module.css","components/contacts/Filter/Filter.module.css","components/contacts/Contact/Contact.module.css","components/contacts/ContactList/ContactList.module.css","redux/contacts/selectors/contactAsync.js","redux/contacts/selectors/contactSelectors.js","components/contacts/ContactForm/ContactForm.js","components/contacts/Filter/Filter.js","components/contacts/Contact/Contact.js","components/contacts/ContactList/ContactList.js","views/ContacterView.js"],"names":["module","exports","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","toLowerCase","includes","getLoading","loading","getContactById","contactId","find","ContactForm","handleChange","e","target","value","setState","handleChangeForNumber","Number","isNaN","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","resetForm","handleSubmit","preventDefault","props","some","length","onAddContact","this","className","classes","container","onSubmit","form","type","inputText","placeholder","onChange","Button","variant","size","block","onClick","Component","mapDispatchToProps","contactAsync","connect","contactSelectors","onRename","formFilter","ownProps","onDeleteContact","contactsAsync","map","li","key","alert","ContacterView","onFetchContacts","contactsOperations","contactsSelectors","isLoadingTasks"],"mappings":"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","file":"static/js/contacterview.9abbe68d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"ContactForm_inputText__kVTFi\",\"button\":\"ContactForm_button__X-qbU\",\"container\":\"ContactForm_container__w3e87\",\"form\":\"ContactForm_form__hDolz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2YBjH\",\"formFilter\":\"Filter_formFilter__3CRK7\",\"form\":\"Filter_form__2lbWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__22pfW\",\"toAddButton\":\"Contact_toAddButton__2BiaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2k2ry\",\"li\":\"ContactList_li__2Uy95\",\"alert\":\"ContactList_alert__3RYBN\"};","import axios from \"axios\";\r\nimport contactsActions from \"../actions/contactActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => {\r\n      dispatch(contactsActions.addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactsActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase(filter))\r\n    );\r\n  }\r\n);\r\n\r\nconst getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n  return contacts.find((contact) => contact.id === contactId);\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getContactById,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport contactAsync from \"../../../redux/contacts/selectors/contactAsync\";\r\nimport contactSelectors from \"../../../redux/contacts/selectors/contactSelectors\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleChangeForNumber = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    if (Number.isNaN(Number(value))) {\r\n      toast.error(`Введите пожалуйста цифры`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isOldContact = this.props.contacts.some(\r\n      (state) => state.name.toLowerCase() === this.state.name.toLowerCase()\r\n    );\r\n\r\n    if (isOldContact) {\r\n      toast.error(`Данный контакт уже есть!`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (this.state.name === \"\" && this.state.number === \"\") {\r\n      toast.error(`Введено пустое значение!`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (this.state.name.length < 3) {\r\n      toast.error(`Введено слишком короткое имя! Не меньше 3 символов`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (this.state.name.length > 40) {\r\n      toast.error(`Введено слишком длинное имя! Не больше 40 символов`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (this.state.number.length < 6) {\r\n      toast.error(`Введен слишком короткий номер телефона! Не меньше 6 цифр`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (this.state.number.length > 12) {\r\n      toast.error(`Введен слишком длинный номер телефона! Не больше 12 цифр`, {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else {\r\n      this.props.onAddContact(this.state.name, this.state.number);\r\n    }\r\n    this.resetForm();\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className={classes.container}>\r\n        <form onSubmit={this.handleSubmit} className={classes.form}>\r\n          <label>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={name}\r\n              className={classes.inputText}\r\n              placeholder=\"Input name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={number}\r\n              className={classes.inputText}\r\n              placeholder=\"Input phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChangeForNumber}\r\n            />\r\n          </label>\r\n          <ToastContainer />\r\n          <Button variant=\"primary\" type=\"submit\" size=\"lg\" block>\r\n            Add Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            type=\"button\"\r\n            onClick={this.resetForm}\r\n            size=\"lg\"\r\n            block\r\n          >\r\n            Reset\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactAsync.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../../redux/contacts/actions/contactActions\";\r\nimport contactSelectors from \"../../../redux/contacts/selectors/contactSelectors\";\r\nimport classes from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onRename }) => {\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <form>\r\n          <label>Find contacts by name</label>\r\n          <input\r\n            className={classes.formFilter}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => onRename(e.target.value)}\r\n          />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onRename: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRename: contactsActions.onRename,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Contact.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport contactsAsync from \"../../../redux/contacts/selectors/contactAsync\";\r\nimport contactSelectors from \"../../../redux/contacts/selectors/contactSelectors\";\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <p>{name}</p> <p>{number}</p>\r\n      <Button onClick={onDeleteContact} variant=\"danger\">\r\n        X\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactSelectors.getContactById(state, ownProps.id);\r\n  return {\r\n    ...contact,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onDeleteContact: () => dispatch(contactsAsync.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React from \"react\";\r\nimport Contact from \"../Contact/\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactList.module.css\";\r\nimport contactSelectors from \"../../../redux/contacts/selectors/contactSelectors\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <div className={classes.container}>\r\n    <ul>\r\n      {contacts.length > 0 ? (\r\n        contacts.map(({ id }) => (\r\n          <li className={classes.li} key={id}>\r\n            <Contact id={id} />\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={classes.alert}>No have contacts!</li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"../components/contacts/ContactForm\";\r\nimport Filter from \"../components/contacts/Filter/\";\r\nimport ContactList from \"../components/contacts/ContactList\";\r\nimport contactsOperations from \"../redux/contacts/selectors/contactAsync\";\r\nimport contactsSelectors from \"../redux/contacts/selectors/contactSelectors\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nclass ContacterView extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  isLoadingTasks: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContacterView);\r\n"],"sourceRoot":""}